package visao;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import regraNegocio.EstadoRN;
import regraNegocio.LogradouroRN;
import regraNegocio.TipoBebidaRN;
import vo.EstadoVO;
import vo.LogradouroVO;


/**
 *
 * @author Maikon
 */
public class CEP extends Template implements ActionListener {

    /**
     * Creates new form CEP
     */
    public CEP() {
        initComponents();
        setLocationRelativeTo(null);
        ajustarTabelaCEP();
        popularComboEstados();
        popularTabelaCEP();
        setResizable(false);
    }

    public void ajustarTabelaCEP() {

        DefaultTableModel modelo = (DefaultTableModel) tbTemplate.getModel();
        modelo.addColumn("CEP");
        modelo.addColumn("Logradouro");
        modelo.addColumn("Bairro");
        modelo.addColumn("Cidade");
        modelo.addColumn("Estado");

        tbTemplate.getColumnModel().getColumn(0).setPreferredWidth(100);
        tbTemplate.getColumnModel().getColumn(1).setPreferredWidth(170);
        tbTemplate.getColumnModel().getColumn(2).setPreferredWidth(160);
        tbTemplate.getColumnModel().getColumn(3).setPreferredWidth(125);
        tbTemplate.getColumnModel().getColumn(4).setPreferredWidth(125);
    }

    public void popularComboEstados() {
        try {
            EstadoRN consultarEstadoRN = new EstadoRN();

            ArrayList<EstadoVO> comboEstado = consultarEstadoRN.listarComboEstado();
            for (EstadoVO estado : comboEstado) {
                cbUF.addItem(estado.getEst_nome());
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro: " + ex.getMessage(), "CEP", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            Logger.getLogger(Pedido.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void popularTabelaCEP() {

        try {

            LogradouroRN logradouroRN = new LogradouroRN();
            EstadoRN estadoRN = new EstadoRN();

            ArrayList<LogradouroVO> cep = logradouroRN.buscarCEP();

            javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel) tbTemplate.getModel();
            dtm.fireTableDataChanged();
            dtm.setRowCount(0);

            for (LogradouroVO logradouroVO : cep) {

                ArrayList<String> estado = estadoRN.buscarEstado(logradouroVO.getLog_estado());

                String[] linha = {"" + logradouroVO.getLog_cep(), "" + logradouroVO.getLog_logradouro(), "" + logradouroVO.getLog_bairro(), "" + logradouroVO.getLog_cidade(), "" + estado.get(0)};
                dtm.addRow(linha);
            }

        } catch (SQLException sqle) {

            JOptionPane.showMessageDialog(null, "Erro: " + sqle.getMessage(), "CEP", JOptionPane.ERROR_MESSAGE);

        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, "Erro: " + e.getMessage(), "CEP", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtLogradouro = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCep = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtBairro = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCidade = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cbUF = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CEP");

        jPanel1.setPreferredSize(new java.awt.Dimension(700, 127));

        jLabel1.setText("Logradouro : ");

        txtLogradouro.setEnabled(false);

        jLabel2.setText("CEP : ");

        jLabel3.setText("Bairro :");

        txtBairro.setEnabled(false);

        jLabel4.setText("Cidade :");

        txtCidade.setEnabled(false);

        jLabel5.setText("UF :");

        cbUF.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Estado" }));
        cbUF.setEnabled(false);
        cbUF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbUFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtCep, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(cbUF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtLogradouro)))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(cbUF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtLogradouro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbUFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbUFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbUFActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CEP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CEP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CEP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CEP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CEP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbUF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JTextField txtCep;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JTextField txtLogradouro;
    // End of variables declaration//GEN-END:variables

    @Override
    public void btCadastrarActionPerformed(ActionEvent e) {
        txtCidade.setEnabled(true);
        txtBairro.setEnabled(true);
        txtLogradouro.setEnabled(true);
        cbUF.setEnabled(true);
    }

    @Override
    public void btEditarActionPerformed(ActionEvent e) {

        txtCep.setEnabled(false);
        txtCidade.setEnabled(true);
        txtBairro.setEnabled(true);
        txtLogradouro.setEnabled(true);
        cbUF.setEnabled(true);

        txtCep.setText((String) tbTemplate.getValueAt(tbTemplate.getSelectedRow(), 0));
        txtLogradouro.setText((String) tbTemplate.getValueAt(tbTemplate.getSelectedRow(), 1));
        txtBairro.setText((String) tbTemplate.getValueAt(tbTemplate.getSelectedRow(), 2));
        txtCidade.setText((String) tbTemplate.getValueAt(tbTemplate.getSelectedRow(), 3));
        cbUF.setSelectedItem((String) tbTemplate.getValueAt(tbTemplate.getSelectedRow(), 4));
    }

    @Override
    public void btExcluirActionPerformed(ActionEvent e) {
        txtCidade.setEnabled(false);
        txtBairro.setEnabled(false);
        txtLogradouro.setEnabled(false);
        cbUF.setEnabled(false);
        int n = JOptionPane.showConfirmDialog(null, "Deseja excluir o CEP? ", "CEP", JOptionPane.YES_NO_OPTION);
        if (n == 0) {
            
            try {

                String codigo;
                codigo = (String)tbTemplate.getValueAt(tbTemplate.getSelectedRow(), 0);

                LogradouroRN logradouroRN = new LogradouroRN();
                logradouroRN.excluirSabor(codigo);

                popularTabelaCEP();

                JOptionPane.showMessageDialog(null, "CEP excluído com Sucesso.", "Exclusão de CEP", JOptionPane.INFORMATION_MESSAGE);

            } catch (SQLException sqle) {

                JOptionPane.showMessageDialog(null, "Erro: Este CEP não pode ser excluído, verifique as dependências ", "Exclusão de CEP", JOptionPane.ERROR_MESSAGE);

            } catch (Exception ex) {

                JOptionPane.showMessageDialog(null, "Erro: " + ex.getMessage(), "Exclusão de CEP", JOptionPane.ERROR_MESSAGE);
            }
        }

    }

    @Override
    public void btCancelarActionPerformed(ActionEvent e) {
        int n = JOptionPane.showConfirmDialog(null, "Deseja cancelar? ", "CEP", JOptionPane.YES_NO_OPTION);
        if (n == 0) {
            this.dispose();
        }
    }

    @Override
    public void btSalvarActionPerformed(ActionEvent e) {

        txtCidade.setEnabled(false);
        txtBairro.setEnabled(false);
        txtLogradouro.setEnabled(false);
        cbUF.setEnabled(false);
        txtCep.setEnabled(true);

        //Se estiver no modo de adicionar
        if (save == 1) {

            //Verificação de campos em branco
            if ("".equals(txtBairro.getText()) || "".equals(txtCep.getText()) || "".equals(txtCidade.getText()) || "".equals(txtLogradouro.getText()) || cbUF.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "Existe(m) campo(s) em branco!", "Cadastro de CEP", JOptionPane.INFORMATION_MESSAGE);
                txtCidade.setEnabled(true);
                txtBairro.setEnabled(true);
                txtLogradouro.setEnabled(true);
                cbUF.setEnabled(true);
                statusSistema = 1;
            } else {
                try {

                    LogradouroVO logradouroVO = new LogradouroVO();

                    logradouroVO.setLog_bairro(txtBairro.getText());
                    logradouroVO.setLog_cep(txtCep.getText());
                    logradouroVO.setLog_cidade(txtCidade.getText());
                    logradouroVO.setLog_estado(cbUF.getSelectedIndex());
                    logradouroVO.setLog_logradouro(txtLogradouro.getText());

                    LogradouroRN logradouroRN = new LogradouroRN();
                    logradouroRN.cadastrarCep(logradouroVO);

                    popularTabelaCEP();

                    JOptionPane.showMessageDialog(null, "CEP Cadastrado com Sucesso.", "Cadastro de CEP", JOptionPane.INFORMATION_MESSAGE);
                    statusSistema = 0;
                } catch (SQLException ex) {

                    JOptionPane.showMessageDialog(null, "Erro: " + ex.getMessage(), "Cadastro de CEP", JOptionPane.ERROR_MESSAGE);

                } catch (Exception ex) {

                    JOptionPane.showMessageDialog(null, "Erro: " + ex.getMessage(), "Cadastro de CEP", JOptionPane.ERROR_MESSAGE);
                }
            }

            //Se entrar no modo de edição
        } else if (save == 2) {

            if ("".equals(txtBairro.getText()) || "".equals(txtCep.getText()) || "".equals(txtCidade.getText()) || "".equals(txtLogradouro.getText()) || cbUF.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "Existe(m) campo(s) em branco!", "Cadastro de CEP", JOptionPane.INFORMATION_MESSAGE);
                txtCidade.setEnabled(true);
                txtBairro.setEnabled(true);
                txtLogradouro.setEnabled(true);
                cbUF.setEnabled(true);
                statusSistema = 2;
            } else {
                try {

                    LogradouroVO logradouroVO = new LogradouroVO();

                    logradouroVO.setLog_cep((String) tbTemplate.getValueAt(tbTemplate.getSelectedRow(), 0));
                    logradouroVO.setLog_bairro(txtBairro.getText());
                    logradouroVO.setLog_cidade(txtCidade.getText());
                    logradouroVO.setLog_estado(cbUF.getSelectedIndex());
                    logradouroVO.setLog_logradouro(txtLogradouro.getText());

                    LogradouroRN logradouroRN = new LogradouroRN();
                    logradouroRN.atualizarCep(logradouroVO);

                    popularTabelaCEP();

                    JOptionPane.showMessageDialog(null, "CEP Atualizado com Sucesso.", "Edição de CEP", JOptionPane.INFORMATION_MESSAGE);

                    txtCep.setEditable(true);
                    txtBairro.setText("");
                    txtCep.setText("");
                    txtCidade.setText("");
                    txtLogradouro.setText("");
                    cbUF.setSelectedIndex(0);
                    statusSistema = 0;
                } catch (SQLException ex) {

                    JOptionPane.showMessageDialog(null, "Erro: " + ex.getMessage(), "Edição de CEP", JOptionPane.ERROR_MESSAGE);

                } catch (Exception ex) {

                    JOptionPane.showMessageDialog(null, "Erro: " + ex.getMessage(), "Edição de CEP", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }
}
