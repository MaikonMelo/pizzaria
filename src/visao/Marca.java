/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import regraNegocio.MarcaRN;
import vo.MarcaVO;
import visao.Bebida;

/**
 *
 * @author Raphael
 */
public class Marca extends Template implements ActionListener{

    /**
     * Creates new form Marca
     */
    public Marca() {
        initComponents();
        listarMarca();
        this.setLocationRelativeTo(null);
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtMarca = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Marca");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Marca :");

        txtMarca.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtMarca.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Código:");

        txtCodigo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtCodigo.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Marca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Marca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Marca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Marca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Marca().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtMarca;
    // End of variables declaration//GEN-END:variables

    @Override
    public void btCadastrarActionPerformed(ActionEvent e) {
        txtMarca.setEnabled(true);
        MarcaRN marcaRN = new MarcaRN();        
        try {
            int ultimoID = marcaRN.pegarUltimoID() + 1;
            txtCodigo.setText(String.valueOf(ultimoID));
        } catch (SQLException sqle) {

            JOptionPane.showMessageDialog(null, "Erro: " + sqle.getMessage(), "Borda", JOptionPane.ERROR_MESSAGE);

        } catch (Exception ex) {

            JOptionPane.showMessageDialog(null, "Erro: " + ex.getMessage(), "Borda", JOptionPane.ERROR_MESSAGE);
        }
    }

    @Override
    public void btEditarActionPerformed(ActionEvent e) {
        txtMarca.setEnabled(true);
        int selecionada = tbTemplate.getSelectedRow();
        
        txtMarca.setText((tbTemplate.getValueAt(selecionada, 1).toString()));
        txtCodigo.setText((tbTemplate.getValueAt(selecionada, 0).toString()));
        
    }

    @Override
    public void btExcluirActionPerformed(ActionEvent e) {
        txtMarca.setEnabled(false);
        int n = JOptionPane.showConfirmDialog(null,"Deseja excluir a Marca? ","Marca",JOptionPane.YES_NO_OPTION);
        if(n==0){
            try{
            MarcaVO marcaVO = new MarcaVO();
            
            
            int selecionada = tbTemplate.getSelectedRow();
            marcaVO.setCodigo((int) tbTemplate.getValueAt(selecionada, 0));
            
            MarcaRN marcaRN = new MarcaRN();
            marcaRN.excluirMarca(marcaVO);
            
            txtMarca.setText("");
            
            
            atualizarLista();
            
            //buscaBorda.popularTabela();
            
            
        } catch (SQLException w) {

            JOptionPane.showMessageDialog(null, "Erro: " + w.getMessage(), "Exclusão de Bebida", JOptionPane.ERROR_MESSAGE);
        
        } catch (Exception w) {

            JOptionPane.showMessageDialog(null, "Erro: " + w.getMessage(), "Exclusão de Bebida", JOptionPane.ERROR_MESSAGE);
        }
            
            JOptionPane.showMessageDialog(null,"Marca excluida com sucesso! ","Marca",JOptionPane.INFORMATION_MESSAGE);
        }
    }

    @Override
    public void btCancelarActionPerformed(ActionEvent e) {
        int n = JOptionPane.showConfirmDialog(null,"Deseja cancelar? ","Marca",JOptionPane.YES_NO_OPTION);
        if(n==0){
            this.dispose();
        }
    }

    @Override
    public void btSalvarActionPerformed(ActionEvent e) {
        txtMarca.setEnabled(false);
        if (save == 1) {
            try{
                MarcaVO marcaVO = new MarcaVO();

                marcaVO.setNome(txtMarca.getText());



                MarcaRN marcaRN = new MarcaRN();
                marcaRN.cadastrarMarca(marcaVO);

                txtMarca.setText("");


                atualizarLista();


                //buscaBorda.popularTabela();
                JOptionPane.showMessageDialog(null,"Marca adicionada com sucesso! ","Marca",JOptionPane.INFORMATION_MESSAGE);

            } catch (SQLException w) {

                JOptionPane.showMessageDialog(null, "Erro: " + w.getMessage(), "Cadastro Tipo de Bebida SQL", JOptionPane.ERROR_MESSAGE);

            } catch (Exception w) {

                JOptionPane.showMessageDialog(null, "Erro: " + w.getMessage(), "Cadastro Tipo de Bebida EX", JOptionPane.ERROR_MESSAGE);
            }
        }else if (save == 2) {
            try{
                MarcaVO marcaVO = new MarcaVO();

                marcaVO.setNome(txtMarca.getText());
                marcaVO.setCodigo(Integer.parseInt(txtCodigo.getText()));

                MarcaRN marcaRN = new MarcaRN();
                marcaRN.editarMarca(marcaVO);

                txtMarca.setText("");

                atualizarLista();

                //buscaBorda.popularTabela();

                JOptionPane.showMessageDialog(null,"Marca Editada com sucesso! ","Borda",JOptionPane.INFORMATION_MESSAGE);
            } catch (SQLException w) {

                JOptionPane.showMessageDialog(null, "Erro: " + w.getMessage(), "Edição de Marca", JOptionPane.ERROR_MESSAGE);

            } catch (Exception w) {

                JOptionPane.showMessageDialog(null, "Erro: " + w.getMessage(), "Edição deMarca", JOptionPane.ERROR_MESSAGE);
            }
        }
     }
    
    
    public final void listarMarca(){
        try {
            
            MarcaRN marcarn = new MarcaRN();
            ArrayList<MarcaVO> marca = marcarn.listarMarca();
            
            DefaultTableModel modelo = (DefaultTableModel)tbTemplate.getModel();
            modelo.setRowCount(0);
            int n;
            
            for(n = 0; n<=1 ;n++)
            modelo.addColumn(this);
            
            for (MarcaVO marcaVO : marca) {
                modelo.addRow(new Object[]{marcaVO.getCodigo(),marcaVO.getNome()});
            }
            tbTemplate.setModel(modelo);
            
            ajustarTabelaMarca();
              
        } catch (SQLException | ClassNotFoundException ex) {
           
        } catch (Exception ex) {
            Logger.getLogger(MarcaRN.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void ajustarTabelaMarca(){
        
        
        tbTemplate.getColumnModel().getColumn(0).setHeaderValue("Código");
        tbTemplate.getColumnModel().getColumn(1).setHeaderValue("Nome");
        
        tbTemplate.getColumnModel().getColumn(0).setPreferredWidth(50);
        tbTemplate.getColumnModel().getColumn(1).setPreferredWidth(542);
        
        tbTemplate.setDefaultEditor(Object.class, null);
    }
    
    public final void atualizarLista(){
        try{
            MarcaRN marcarn = new MarcaRN();
            ArrayList<MarcaVO> marca = marcarn.listarMarca();
            
            DefaultTableModel modelo = (DefaultTableModel)tbTemplate.getModel();
            modelo.setRowCount(0);
            
            for (MarcaVO marcaVO : marca) {
                
                modelo.addRow(new Object[]{marcaVO.getCodigo(),marcaVO.getNome()});
            }
            tbTemplate.setModel(modelo);
            
            ajustarTabelaMarca();
            
            
    
        }catch (SQLException | ClassNotFoundException ex) {
           
        } catch (Exception ex) {
            Logger.getLogger(MarcaRN.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
